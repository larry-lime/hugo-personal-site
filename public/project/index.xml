<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Projects on Lawrence Lim</title>
    <link>/project/</link>
    <description>Recent content in Projects on Lawrence Lim</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Sep 2022 01:26:38 +0800</lastBuildDate><atom:link href="/project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ethereum Crowd Funding – Full Stack Solidity &amp; JavaScript DApp</title>
      <link>/project/hh-fund-me/</link>
      <pubDate>Sun, 18 Sep 2022 01:26:38 +0800</pubDate>
      
      <guid>/project/hh-fund-me/</guid>
      <description>About The Project My Ethereum Crowd Funding project is full stack decentralized application built who&amp;rsquo;s backend is built with Solidity and the Hardhat Ethereum development framework. Tests are done with Mocha &amp;amp; Chai in Javascript. Additionally, it utilizes Chainlink pricefeed oracles and its frontend is coded in vanilla HTML/CSS and Javascript.
Getting Started Prerequisites yarn metamask live-server Installation Clone the repo (backend) git clone https://github.com/larry-lime/fund-me-backend/tree/af4c1cd8139fdb8ec96244d58942d45f3dd7692a Run yarn cd fund-me-backend &amp;amp;&amp;amp; yarn Usage Deploy to local blockchain yarn hardhat deploy Run tests yarn hardhat test Test Coverage yarn hardhat deploy Interact with frontend Spin-up node yarn hardhat node Git clone frontend repo git clone https://github.</description>
    </item>
    
    <item>
      <title>Smart Contract Raffle – DApp Backend</title>
      <link>/project/hh-raffle/</link>
      <pubDate>Sun, 18 Sep 2022 01:26:30 +0800</pubDate>
      
      <guid>/project/hh-raffle/</guid>
      <description>About The Project Smart Contract Raffle (GH Repo) Up is a Python GUI desktop chat app built with Tkinter. This app was also created as the final project for NYU Shanghai&amp;rsquo;s Introduction to Computer Science course. Here we will detail several of its key features and outline its development lifecycle.
Built With Our chat application used the following languages and libraries in our development.
Python Tkinter GUI Library Ngrok Network Application Getting Started Prerequisites This project depends on the python tkinter GUI library and ngrok network app.</description>
    </item>
    
    <item>
      <title>MeChat - Python GUI Desktop Chat App</title>
      <link>/project/mechat/</link>
      <pubDate>Sat, 27 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/project/mechat/</guid>
      <description>About The Project MeChat (GH Repo) Up is a Python GUI desktop chat app built with Tkinter. This app was also created as the final project for NYU Shanghai&amp;rsquo;s Introduction to Computer Science course. Here we will detail several of its key features and outline its development lifecycle.
Built With Our chat application used the following languages and libraries in our development.
Python Tkinter GUI Library Ngrok Network Application Getting Started Prerequisites This project depends on the python tkinter GUI library and ngrok network app.</description>
    </item>
    
    <item>
      <title>BTC Data Analysis Project - Which is the Most Hyped Crypto?</title>
      <link>/project/btc-analysis/</link>
      <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/project/btc-analysis/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
